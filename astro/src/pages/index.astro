---
import Layout from '../layouts/Layout.astro'
import Background from '../components/landing/Background.astro'
import ThreeDModel from '../components/landing/3DModel.astro'
import EditorDemo from '../components/landing/EditorDemo.tsx'
import SVGScroll from '../components/landing/SVGScroll.astro'
import { slug } from '../lib/utils/guide'

const guides = await Astro.glob('/../guides/*.md')
let curated = ['raymarching', 'mesh', 'square-disarray']
curated = curated.map(name => {
  let find = guides.find(guide => guide.file.includes(name))
  return find
})

let images = []
const list = (await Astro.glob('/../art/list.json'))[0].default
list.forEach(folder => {
  folder.snapshots.map(snapshot => {
    images.push({
      dir: folder.directory,
      img: `https://raw.githubusercontent.com/hackclub/blot/main/art/${folder.directory}/snapshots/${snapshot}`,
      href: `/editor?src=https://raw.githubusercontent.com/hackclub/blot/main/art/${folder.directory}/${folder.source}`,
      alt: folder.directory
    })
  })
})

export const prerender = true
---

<Layout navbar={true}>
  <style lang="scss" is:global>
    @import '../ui/variables.scss';

    #navbar {
      position: sticky;
      top: 0;
    }

    header {
      box-shadow: inset 0 4px 8px 8px rgba(0, 0, 0, 0.1);
      position: relative;
      width: 100%;
      padding: 2rem;
      overflow: hidden;
      text-align: center;

      h1 {
        font-size: 7rem;
        line-height: 1;
        letter-spacing: -4px;
        margin: 0;

        @media screen and (max-width: $md) {
          font-size: 4rem;
          letter-spacing: -2px;
        }

        a {
          color: var(--primary);
          text-decoration: none;
        }
      }

      h2 {
        font-weight: normal;
      }

      .background {
        transform: scale(1.5);
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0.4;
      }

      .content {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        position: relative;
        z-index: 99;
        height: 100%;
      }
    }

    .background-blur {
      backdrop-filter: blur(2px);
    }

    #info {
      background-image: linear-gradient(to right, #ddd 1px, transparent 1px),
        linear-gradient(to bottom, #ddd 1px, transparent 1px);
      background-size: 40px 40px;
      padding: 2rem;

      h1 {
        font-size: 2.5rem;
        text-align: center;

        @media screen and (max-width: $md) {
          line-height: 1.2;
        }
      }
    }

    #info-grid {
      display: flex;
      flex-direction: column;

      > div {
        align-items: center;
        display: flex;
        gap: 2rem;

        @media screen and (max-width: $md) {
          flex-direction: column;

          img {
            max-width: 100% !important;
          }

          &#control-board-firmware {
            padding-top: 2rem;
            flex-direction: column-reverse;
          }
        }

        img {
          max-width: 100%;
        }
      }
    }

    .info-grid-description {
      font-size: 1.3rem;

      h2 {
        line-height: 1.1;
        margin: 0;
      }

      p {
        margin-top: 0.5em;
      }
    }

    #steps {
      background-color: #f4f3fb;
      border-top: 1px solid #cbd5e1;
      padding: 2rem;

      h1 {
        font-size: 2.5rem;
        text-align: center;
      }
    }

    #steps-container {
      display: flex;

      h2 {
        background-color: rgba(var(--primary-rgb), 0.1);
        font-size: 1.75rem;
        font-weight: normal;
        padding: 2rem;

        a {
          color: var(--primary);
        }
      }
    }

    #demo {
      display: flex;
      gap: 14px;

      > div {
        flex: 50%;
      }
    }

    #code-snippet {
      border: 1px solid var(--primary);

      img {
        max-height: 50vh;
      }
    }
  </style>

  <header>
    <div class="background">
      <Background />
    </div>
    <div class="content">
      <div>
        <h1 style={{ marginTop: '2rem' }}>Blot, the plotter bot</h1>
        <h1>
          from <a href="https://hackclub.com" target="_blank">Hack Club</a>
        </h1>
        <h2 class="background-blur" style={{ marginBottom: '2rem' }}>
          Write a program that creates art and we'll send you* a CNC machine
          that can draw it.
        </h2>
      </div>
      <div id="demo">
        <div id="code-snippet">
          <img src="/landing/code-snippet.webp" />
        </div>
        <div id="three-js-model"></div>
      </div>
      <div style={{ alignSelf: 'flex-end' }}>
        <p
          class="background-blur"
          style={{ fontStyle: 'italic', fontWeight: 'bold' }}>
          Get a machine to draw it. (*Must be a teenager to receive a free
          machine.)
        </p>
      </div>
    </div>
  </header>
  <section id="info">
    <h1>We built everything from scratch, with love and open source.</h1>
    <div id="info-grid">
      <div>
        <EditorDemo client:only />
        <div class="info-grid-description">
          <h2>Custom editor for pen plotter art</h2>
          <p>
            with vector drawing library, direct manipulation widgets, a split
            screen code/visualizer, and direct from browser machine control.
          </p>
        </div>
      </div>
      <div style={{ maxWidth: '75vw', margin: 'auto', marginTop: '1.5rem' }}>
        <div class="info-grid-description">
          <h2>CNC you build yourself</h2>
          <p>
            made of six 3D printed parts, and standard DIY machine building
            design patterns (aluminum extrusion, delrin v-wheels, flanged
            bearing idlers...).
          </p>
        </div>
        <img style={{ maxWidth: '45vw' }} src="/landing/parts.png" />
      </div>
      <div
        id="control-board-firmware"
        style={{ maxWidth: '80vw', margin: 'auto' }}>
        <img src="/landing/control-board.png" style={{ maxWidth: '35vw' }} />
        <div class="info-grid-description">
          <h2>Custom control board and firmware</h2>
          <p>
            so you can understand what goes on in the brains of the machine.
          </p>
        </div>
      </div>
    </div>
  </section>
  <section id="steps">
    <h1>How do I get a Blot?</h1>
    <div id="steps-container">
      <SVGScroll />
      <div>
        <div id="step-1">
          <h2>
            <b>Step 1)</b> Code an original art piece. Learn from our <a
              href="/guides">guides</a
            >. For submission rules, <a
              href="https://github.com/hackclub/blot/blob/main/docs/GET_A_BLOT.md"
              >read this</a
            >.
          </h2>
          {
            curated.map(guide => (
              <a class="frame" href={`/editor?guide=${slug(guide.file)}`}>
                <div />
                <div class="prose">{guide.frontmatter.title}</div>
              </a>
            ))
          }
        </div>
        <div id="step-2">
          <h2>Step 2) Submit it as a pull request to the art gallery.</h2>
        </div>
        <div id="step-3">
          <h2>
            Step 3) Get parts for your Blot in the mail and build your own
            machine.
          </h2>
        </div>
      </div>
    </div>
  </section>
</Layout>
