---
import Layout from '../layouts/Layout.astro'
import Background from '../components/landing/Background.astro'
import CodeSnippet from '../components/landing/CodeSnippet.tsx'
import ThreeDModel from '../components/landing/ThreeDModel.astro'
import { slug } from '../lib/guide.ts'

const workshops = await Astro.glob('/../guides/*.md')

let curated = ['raymarching', 'mesh', 'square-disarray']
curated = curated.map(name => {
  let find = workshops.find(workshop => workshop.file.includes(name))
  return find
})

let images = []
try {
  const list = (await Astro.glob('/../art/list.json'))[0].default
  list.forEach(folder => {
    folder.snapshots.map(snapshot => {
      images.push({
        dir: folder.directory,
        img: `https://raw.githubusercontent.com/hackclub/blot/main/art/${folder.directory}/snapshots/${snapshot}`,
        href: `/editor?src=https://raw.githubusercontent.com/hackclub/blot/main/art/${folder.directory}/${folder.source}`,
        alt: folder.directory
      })
    })
  })
} catch (error) {
  console.log(error)
}
---

<style is:global lang="scss">
  html,
  body {
    all: unset;
    background-image: linear-gradient(to right, #ddd 1px, transparent 1px),
      linear-gradient(to bottom, #ddd 1px, transparent 1px);
    background-size: 40px 40px;
    font-family:
      'Phantom Sans',
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      'Segoe UI',
      Roboto,
      sans-serif;
  }

  a {
    text-decoration: none;
    color: inherit;
  }

  .lead-section {
    height: calc(100vh - 45px);
    width: 100%;
    position: relative;
    display: flex;
    align-items: center;
  }

  .header-section {
    width: 40%;
    padding-left: 5%;
  }

  .strong-header {
    font-size: 4.4vw;
    letter-spacing: -2px;
    font-weight: 600;
    line-height: 1.4;
  }

  .sub-header {
    font-size: 0.5em;
    line-height: 1;
    font-weight: 300;
    letter-spacing: -1px;
    padding-top: 10px;
  }

  .header-text {
    font-size: 3em;
    line-height: 1;
    font-weight: 600;
    letter-spacing: -1px;
  }

  .hack-club-text-box {
    box-sizing: border-box;
    margin: 0;
    min-width: 0;
    padding: 0px 5px;
    background-color: #ec3750;
    border-radius: 10px;
    /*    -webkit-transform: rotate(-3deg) translateY(-5px);*/
    /*    -moz-transform: rotate(-3deg) translateY(-5px);*/
    /*    -ms-transform: rotate(-3deg) translateY(-5px);*/
    /*    transform: rotate(-3deg) translateY(-5px);*/
    color: white;
    white-space: nowrap;
    -webkit-text-decoration: none;
    text-decoration: none;
  }

  .disclaimer {
    font-size: 1em;
    font-weight: 300;
    padding-top: 20px;
  }

  .animated-drawing {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .write-code-machine-draws {
    height: 75vh;
    width: 100%;
    display: flex;
    justify-content: space-around;
    align-items: flex-start;
    margin-bottom: 20vh;

    .header {
      font-size: 1.7rem;
      text-align: center;
      padding-bottom: 10px;
    }
  }

  .write-code {
    display: flex;
    flex-direction: column;
    width: 50%;
    height: 100%;
    max-height: 100%;
    /*    background: green;*/
  }

  .code-image {
    flex: 1;
    object-fit: cover;
    max-height: 100%;
    border-radius: 10px;
    box-shadow: 2px 6px 8px #3e3e3e;
  }

  .machine-draws {
    width: 45%;
    height: 100%;
  }

  .three-d-model {
    height: 100%;
    max-height: 100%;
    background: white;
    border-radius: 10px;
    box-shadow: 2px 6px 8px #3e3e3e;
  }

  .step-item {
    padding: 1rem;
    padding-top: 5vh;
  }

  .step-text {
    font-size: 2.2rem;
    padding: 2vh;
    background: #e7e9fe;
    border-radius: 10px;
    text-align: center;
  }

  .step {
    font-weight: 600;
  }

  a {
    box-sizing: border-box;
    margin: 0;
    min-width: 0;
    color: #ec3750;
    -webkit-text-decoration: underline;
    text-decoration: underline;
    text-underline-position: under;
  }

  a:hover {
    text-decoration-style: wavy;
  }

  footer {
    padding: 10px;
  }

  .step-1-css {
    display: flex;
    justify-content: space-evenly;
    padding: 20px;

    .frame {
      text-decoration: none;
      color: inherit;
      width: 30%;
      min-width: 300px;
      max-width: 400px;
      aspect-ratio: 1;
      background-image: linear-gradient(169deg, #cecef9, #e7f0fb);
      border-radius: 27px;
      display: flex;
      align-items: center;
      flex-direction: column;
      justify-content: space-around;
      padding: 17px;
      box-shadow: 7px 6px 7px rgba(0, 0, 0, 0.1);
      transition:
        transform 0.3s ease,
        box-shadow 0.3s ease; /* Smooth transition for hover effects */
      &:hover {
        /* Hover effect */
        transform: scale(1.05); /* Slightly scales the frame up */
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.15); /* Brighter shadow on hover */
      }
    }

    .thumbnail {
      max-width: 100%;
      max-height: 100%;
      object-fit: contain;
      border-radius: 1rem;
      transition: opacity 0.3s ease; /* Smooth transition for hover effects */
      /* Make the thumbnail slightly less opaque on hover for a subtle effect */
      .frame:hover & {
        opacity: 0.9;
      }
    }

    .prose {
      padding: 10px;
    }
  }

  .step-2-css {
    display: flex;
    justify-content: space-evenly;
    padding: 20px;

    .frame {
      padding: 0;
      margin: 0.5rem;
      border: solid 15px #555;
      box-shadow: -3px -3px 12px #999;
      width: 30%;
      min-width: 300px;
      aspect-ratio: 1;
      float: left;
      margin-bottom: 1rem;
      z-index: 1;
      display: flex;
      align-items: center; /* centers vertically */
      justify-content: center; /* centers horizontally */
      overflow: hidden; /* ensures nothing overflows outside the frame */
      transition: all 0.2s;

      &:hover {
        transform: scale(101%);
      }
    }

    .thumbnail {
      max-width: 100%;
      width: 100%;
      max-height: 100%;
      height: 100%;
      object-fit: contain; /* ensures the image maintains aspect ratio and scales within the container */
      border: 1px solid #aaa;
    }

    .border {
      max-width: 100%;
      width: 100%;
      height: 100%;
      max-height: 100%;
      background-color: white;
      margin: 0;
      border: solid 10px white;
      box-shadow: -3px -3px 12px #999;
    }
  }

  .machine-img-container {
    padding: 20px;
    width: 100%;
    display: flex;
  }

  .machine-img {
    width: 40%;
    margin: auto;
  }
</style>

<Layout
  title="Blot"
  description="Blot, the plotter bot from Hack Club: you code art, we send you a machine.">
  <div class="lead-section">
    <div class="header-section strong-header">
      <div>Blot, the plotter bot</div>
      <div>
        from <a class="hack-club-text-box" href="https://www.hackclub.com"
          >Hack Club</a
        >
      </div>
      <div class="sub-header">You* code art, we send you a machine.</div>
    </div>

    <div class="animated-drawing">
      <div style="width: 80%;"><Background /></div>
      <div class="disclaimer">
        (*Must be a &lt;20 years old to receive a free machine.)
      </div>
    </div>
  </div>

  <div class="write-code-machine-draws">
    <div class="write-code">
      <div class="header">Write code in the Blot editor.</div>
      <img class="code-image" src="/landing/code2.png" />
    </div>

    <div class="machine-draws">
      <div class="header">Get a machine which can draw it.</div>
      <div class="three-d-model">
        <ThreeDModel />
      </div>
    </div>
  </div>

  <div class="step-item">
    <div class="step-text">
      <span class="step">Step 1)</span>Make an original art piece. Learn from <a
        href="/guides">our guides</a
      >.
    </div>
    <div class="step-1-css">
      {
        curated.map(workshop => (
          <a class="frame" href={`/guide/${slug(workshop.file)}`}>
            <img class="thumbnail" src={workshop.frontmatter.thumbnail} />
            <div class="prose">{workshop.frontmatter.title}</div>
          </a>
        ))
      }
    </div>
  </div>

  <div class="step-item">
    <div class="step-text">
      <span class="step">Step 2)</span>Submit it as a pull request to the <a
        href="/gallery">art gallery</a
      >.
    </div>
    <div class="step-2-css">
      {
        images
          .filter(x =>
            ['leaf', 'tree', 'square-disarray'].some(x => x.includes(x.dir))
          )
          .map(img => {
            return (
              <div class="frame">
                <a class="border" href={img.href}>
                  <img class="thumbnail" alt={img.alt} src={img.img} />
                </a>
              </div>
            )
          })
      }
    </div>
  </div>

  <div class="step-item">
    <div class="step-text">
      <span class="step">Step 3)</span>Get parts for your Blot in the mail and <a
        href="/guides">build your own machine</a
      >.
    </div>
    <div class="machine-img-container">
      <img class="machine-img" src="/landing/machine.png" />
    </div>
  </div>

  <footer>Â© 2023 Hack Club. 501(c)(3) nonprofit (EIN: 81-2908499)</footer>
</Layout>
