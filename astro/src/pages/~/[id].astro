---
import Layout from '../../layouts/Layout.astro'
import EditorComponent from '../../components/editor/Editor'
import EditorAutosave from '../../components/~/EditorAutosave'
import { firestore, getArt, getSession } from '../../db/account'
import { signal } from '@preact/signals'
import type { PersistenceState } from '../../lib/state/persist'
import { mobileUserAgent } from '../../lib/utils/mobile'
import MobileUnsupported from '../../components/MobileUnsupported.astro'
import { persist } from '../../db/auth-helper'
import { slug } from '../../lib/utils/guide'

let toolkit = (await Astro.glob('/../docs/TOOLKIT.md'))[0].compiledContent()

const session = await getSession(Astro.cookies)
if (!session) return Astro.redirect(`/login?to=${Astro.request.url}`, 302)

const art = await getArt(Astro.params.id!)
if (!art || art.ownerId !== session.user.id) return Astro.redirect('/404', 302)

let tutorial: string[] | undefined
let tutorialIndex: number | undefined
if (art.tutorialName) {
  // Get tutorial and pass into editor
}

let _persistenceState: PersistenceState
if (session.session.full) {
  if (art.unprotected) {
    await firestore.collection('art').doc(art.id).update({ unprotected: false })
    art.unprotected = false
  }
  if (Astro.cookies.get('blotTempArt')?.value === art.id)
    Astro.cookies.delete('blotTempArt', { path: '/' })

  _persistenceState = {
    kind: 'PERSISTED',
    session,
    cloudSaveState: 'SAVED',
    art,
    tutorial,
    tutorialIndex,
    stale: false
  }
} else {
  if (!art.unprotected)
    return Astro.redirect(`/login?to=${Astro.request.url}`, 302)
  if (art.ownerId !== session.user.id) return Astro.redirect('/404', 302)

  _persistenceState = {
    kind: 'PERSISTED',
    session,
    cloudSaveState: 'SAVED',
    art,
    tutorial,
    tutorialIndex,
    stale: false
  }
}

const persistenceState = signal<PersistenceState>(_persistenceState)
console.log(persistenceState.value)
const isMobile = mobileUserAgent(Astro.request.headers.get('user-agent') ?? '')

export const prerender = false
---

<Layout
  title={`Blot | ${persistenceState.value.art.name || 'Editor'}`}
  navbar={isMobile ? true : false}>
  {
    isMobile ? (
      <MobileUnsupported />
    ) : (
      <>
        <EditorComponent
          client:only
          source={persistenceState.value.art.code}
          guide={null}
          toolkit={toolkit}
          loggedIn={true}
        />
        <EditorAutosave client:only />
      </>
    )
  }
</Layout>
