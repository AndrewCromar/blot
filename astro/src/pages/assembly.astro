---
import Layout from '../layouts/Layout.astro'
const assembly = (await Astro.glob('/../docs/ASSEMBLY.md'))[0]
const { Content } = assembly
const headings = assembly.getHeadings()
---

<style is:global>
  #container {
    margin: 0 auto;
    padding: 2rem;
    gap: 2rem;
    position: relative;
  }

  @media screen and (min-width: 600px) {
    #container {
      display: flex;
      width: 70vw;
    }
  }

  header h1 {
    font-size: 4rem;
    line-height: 1.1;
    margin: 1.1rem 0;
  }

  #cta {
    display: flex;
    align-items: flex-end;
    gap: 4px;
    margin-top: 1.5rem;
  }

  #cta svg {
    width: 1.1rem;
  }

  .toc {
    align-self: flex-start;
    font-family: var(--font-serif);
    font-size: 0.995rem;
    position: sticky;
    flex: 25%;
    top: 4rem;
    padding-bottom: 0;
    margin-top: 2rem;
  }

  .toc h1,
  .toc h2,
  .toc h3,
  .toc h4,
  .toc h5,
  .toc h6 {
    font-size: 0.995rem;
  }

  .toc *:not(button) {
    color: var(--primary);
    font-weight: normal;
    text-decoration: none;
    transition: opacity 0.2s;
    margin-top: 0;
    margin-bottom: calc(0.995rem / 2);
  }

  .toc *:not(button):hover {
    opacity: 0.8;
  }

  #title {
    line-height: 1;
    letter-spacing: -1px;
  }

  .prose {
    font-family: var(--font-serif);
    font-size: 1.1rem;
    line-height: 1.6;
    margin: 0 auto;
    position: relative;
  }

  .prose a {
    color: var(--primary);
    transition: opacity 0.2s;
  }

  .prose a:hover {
    opacity: 0.8;
  }

  .prose article {
    margin: 0 auto;
    max-width: 50vw;
  }

  .prose blockquote {
    border-left: 3px solid var(--primary);
    padding-left: 1rem;
  }

  .prose hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
  }

  .prose img {
    display: block;
    margin: 1.1rem 0;
    max-width: 100%;
  }

  .prose code,
  .prose pre {
    font-size: 0.995rem;
    font-family: var(--font-mono);
  }

  .prose li p {
    margin: 0;
  }

  #back {
    background-color: white;
    position: sticky;
    top: 0;
    z-index: 10;
  }

  #back a {
    text-decoration: none;
  }
</style>

<Layout title="Assembly">
  <section id="container">
    <div class="toc">
      {
        headings.map((heading, idx) => {
          let prevDepth = idx > 0 ? headings[idx - 1].depth : Infinity
          switch (heading.depth) {
            case 1:
              return (
                <h1>
                  <a href={`#${heading.slug}`}>{heading.text}</a>
                </h1>
              )
            case 2:
              return (
                <h2>
                  <a
                    href={`#${heading.slug}`}
                    style={{ marginLeft: prevDepth < 2 ? '4px' : '' }}>
                    {heading.text}
                  </a>
                </h2>
              )
            case 3:
              return (
                <h3>
                  <a
                    href={`#${heading.slug}`}
                    style={{ marginLeft: prevDepth < 3 ? '5px' : '' }}>
                    {heading.text}
                  </a>
                </h3>
              )
            case 4:
              return (
                <h4>
                  <a
                    href={`#${heading.slug}`}
                    style={{ marginLeft: prevDepth < 3 ? '6px' : '' }}>
                    {heading.text}
                  </a>
                </h4>
              )
            case 5:
              return (
                <h5>
                  <a
                    href={`#${heading.slug}`}
                    style={{ marginLeft: prevDepth < 3 ? '7px' : '' }}>
                    {heading.text}
                  </a>
                </h5>
              )
            case 6:
              return (
                <h6>
                  <a
                    href={`#${heading.slug}`}
                    style={{ marginLeft: prevDepth < 3 ? '8px' : '' }}>
                    {heading.text}
                  </a>
                </h6>
              )
          }
        })
      }
    </div>
    <div class="prose">
      <header>
        <article>
          <Content />
          <p>
            <a
              href={`https://github.com/hackclub/haxidraw/edit/main/ASSEMBLY.md`}
              target="_blank"
              rel="noreferrer"
              >Update/make a grammar fix
            </a>
          </p>
        </article>
      </header>
    </div>
  </section>
</Layout>
